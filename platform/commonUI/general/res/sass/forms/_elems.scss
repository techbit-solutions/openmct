/*****************************************************************************
 * Open MCT, Copyright (c) 2014-2018, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/
.section-header {
    border-radius: $basicCr;
    background: $colorFormSectionHeader;
    color: lighten($colorBodyFg, 20%);
    font-size: inherit;
    margin: $interiorMargin 0;
    padding: $formTBPad $formLRPad;
    text-transform: uppercase;
    .view-control {
        display: inline-block;
        margin-right: $interiorMargin;
        width: 1em;
        height: 1em;
    }
}

.form {
	color: $colorFormText;
    height: 100%;
    width: 100%;

    .l-form-section {
        margin-bottom: $interiorMarginLg * 2;
        position: relative;
        &.grows {
            .l-section-body,
            .form-row {
                flex: 1 1 auto;
                .wrapper {
                    height: 100%;
                }
            }
        }
    }

	.form-row {
		$m: $interiorMargin;
		box-sizing: border-box;
		border-top: 1px solid $colorFormLines;
		padding: $formTBPad 0;
		position: relative;

		&.first {
			border-top: none;
		}

		>.label,
		>.controls {
			box-sizing: border-box;
			font-size: 0.8rem;
		}

		>.label {
			// Only style this way for immediate children of .form-row; prevents problems when .label is used in .controls section of a form
			min-width: 120px;
            order: 1;
            position: relative;
			white-space: nowrap;
			width: $formLabelW;
		}

		.value {
			color: $colorInputFg;
		}

		.controls {
            order: 2;
            position: relative;
            flex: 1 1 auto;

			.l-composite-control {
				&.l-checkbox {
					display: inline-block;
					line-height: $formRowCtrlsH;
					margin-right: 5px;
				}
			}
			.select {
				margin-right: $interiorMargin;
			}
		}

		.hint, .field-hints {  color: $colorFieldHint;  }

		.selector-list {
			// Used in create overlay to display tree view
			@include nice-input();
            padding: $interiorMargin;
			position: relative;
            min-height: 150px;
			height: 100%;
			>.wrapper {
				$p: $interiorMargin;
                box-sizing: border-box;
				overflow: auto;
			}
		}
	}
}

.l-controls-first .form .form-row,
.form .form-row.l-controls-first {
    >.label,
    >.controls {
        line-height: inherit;
        min-height: inherit;
    }
    >.label {
        flex: 1 1 auto;
        min-width: 0;
        width: auto;
        order: 2;
    }
    >.control,
    >.controls {
        flex: 0 0 auto;
        margin-right: $interiorMargin;
        order: 1;
    }
}

.l-controls-under.l-flex-row {
    // Change to use column layout
    flex-direction: column;
    .flex-elem {
        margin-bottom: $interiorMarginLg;
    }
}

.hint,
.s-hint {
	font-size: 0.9em;
    .req {
        color: $colorFormRequired;
        font-size: 0.7rem;
    }
}

.l-result {
	// Used in /vista/channel-query.html and evr-query.html as of 2/24/15
	display: inline-block;
	min-width: 32px; min-height: 32px;
	position: relative;
	vertical-align: top;

	div.s-hint {
		border-radius: $basicCr;
		background: rgba($colorFormInvalid, 0.8);
		display: block;
		color: lighten($colorFormInvalid, 30%);
		padding: $interiorMargin;
	}
}

/**************************************************************************** COMPACT FORM */
// ul > li > label, control
// Make a new UL for each form section
// Allow control-first, controls-below
// TO-DO: migrate work in branch ch-plot-styling that users .inspector-config to use classes below instead

.l-compact-form .tree ul li,
.l-compact-form ul li {
    padding: 2px 0;
}


.l-compact-form {
    $labelW: 40%;
    $minW: $labelW;
    ul {
        margin-bottom: $interiorMarginLg;
        li {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            label,
            .control {
                display: flex;
            }
            label {
                line-height: inherit;
                width: $labelW;
            }
            .controls {
                flex-grow: 1;
                margin-left: $interiorMargin;
                input[type="text"],
                input[type="search"],
                input[type="number"],
                .select {
                    height: $btnStdH;
                    line-height: $btnStdH;
                    vertical-align: middle;
                }

                .e-control {
                    // Individual form controls
                    &:not(:first-child) {
                        margin-left: $interiorMarginSm;
                    }
                }
            }

            &.connects-to-previous {
                padding-top: 0;
            }

            &.section-header {
                margin-top: $interiorMarginLg;
                border-top: 1px solid $colorFormLines;
            }

            &.controls-first {
                .control {
                    flex-grow: 0;
                    margin-right: $interiorMargin;
                    min-width: 0;
                    order: 1;
                    width: auto;
                }
                label {
                    flex-grow: 1;
                    order: 2;
                    width: auto;
                }
            }
            &.controls-under {
                display: block;
                .control, label {
                    display: block;
                    width: auto;
                }

                ul li {
                    border-top: none !important;
                    padding: 0;
                }
            }
        }
    }
}

.form-error {
    // Block element that visually flags an error and contains a message
    background-color: $colorFormFieldErrorBg;
    color: $colorFormFieldErrorFg;
    border-radius: $basicCr;
    display: block;
    padding: 1px 6px;
    &:before {
        content: $glyph-icon-alert-triangle;
        display: inline-block;
        font-family: symbolsfont;
        margin-right: $interiorMarginSm;
    }
}
